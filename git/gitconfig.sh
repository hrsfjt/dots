#!/bin/bash

if [ $# -ne 2 ]; then
  echo "実行には user_name と email が必要です"
  echo "bash git/gitconfig.sh :user_name :email"
  exit 1
fi

SCRIPT_DIR=$(
  cd $(dirname $0)
  pwd
)

git config --global user.name $1
git config --global user.email $2

git config --global core.ignorecase false
git config --global core.quotepath false
git config --global core.editor 'vim -c "set fenc=utf-8"'

# Patterns which a user wants Git to ignore in all situations (e.g.,
# backup or temporary files generated by the user's editor of choice)
# generally go into a file specified by core.excludesFile in the
# user's ~/.gitconfig. Its default value is
# $XDG_CONFIG_HOME/git/ignore. If $XDG_CONFIG_HOME is either not set
# or empty, $HOME/.config/git/ignore is used instead.
if [ ! -e $HOME/.config ]; then
  mkdir -p $HOME/.config/git
  touch $HOME/.config/git/ignore
  cat $SCRIPT_DIR/ignore >>$HOME/.config/git/ignore
  echo "$HOME/.config/git/ignore created"
fi
if [ ! -e $HOME/.config/git ]; then
  mkdir -p $HOME/.config/git
  touch $HOME/.config/git/ignore
  cat $SCRIPT_DIR/ignore >>$HOME/.config/git/ignore
  echo "$HOME/.config/git/ignore created"
fi
if [ ! -e $HOME/.config/git/ignore ]; then
  touch $HOME/.config/git/ignore
  cat $SCRIPT_DIR/ignore >>$HOME/.config/git/ignore
  echo "$HOME/.config/git/ignore created"
fi
git config --global core.excludesfile $HOME/.config/git/ignore

git config --global color.diff auto
git config --global color.status auto
git config --global color.branch auto

git config --global push.default simple

git config --global diff.tool vimdiff
git config --global difftool.prompt false

git config --global merge.tool vimdiff
git config --global mergetool.prompt false
